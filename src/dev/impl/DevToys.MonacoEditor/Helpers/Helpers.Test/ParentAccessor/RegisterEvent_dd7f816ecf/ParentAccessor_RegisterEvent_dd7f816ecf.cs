// Test generated by RoostGPT for test Csharp-dev-toys using AI Type Azure Open AI and AI Model roost-gpt

using NUnit.Framework;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace DevToys.MonacoEditor.Helpers
{
    [TestFixture]
    public class TestParentAccessor
    {
        private ParentAccessor parentAccessor;

        [SetUp]
        public void Setup()
        {
            parentAccessor = new ParentAccessor();
        }

        [Test]
        public void TestParentAccessor_RegisterEvent_NullEvents_ThrowsException()
        {
            // Arrange
            string eventName = "Event1";
            Func<string[], Task<string?>> function = args => Task.FromResult("Event1 handled.");

            // Assert
            Assert.Throws<NullReferenceException>(() =>
            {
                // Act
                parentAccessor.RegisterEvent(eventName, function);
            });
        }

        [Test]
        public void TestParentAccessor_RegisterEvent_ValidParameters_AddsEventFunctionToEventsDictionary()
        {
            // Arrange
            string eventName = "Event2";
            Func<string[], Task<string?>> function = args => Task.FromResult("Event2 handled.");

            // Act
            parentAccessor.RegisterEvent(eventName, function);

            // Assert
            Assert.IsTrue(parentAccessor.Events.ContainsKey(eventName));
            Assert.AreEqual(function, parentAccessor.Events[eventName]);
        }
    }

    internal class ParentAccessor
    {
        public Dictionary<string, Func<string[], Task<string?>>> Events { get; set; }

        public ParentAccessor()
        {
            Events = new Dictionary<string, Func<string[], Task<string?>>>();
        }

        internal void RegisterEvent(string name, Func<string[], Task<string?>> function)
        {
            if (Events is null)
            {
                throw new NullReferenceException();
            }

            Events[name] = function;
        }
    }
}
